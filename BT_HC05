#include <Adafruit_MotorShield.h>
#include <AFMotor.h>
#include <Wire.h>
#include "SoftwareSerial.h"

#define FRONT_LIGHT_PIN 7  // Change 7 to the actual pin you connected
#define BACK_LIGHT_PIN 8   // Change 8 to the actual pin you connected
#define HORN_PIN 9         // Change 9 to the actual pin you connected


// Initialize motor shield
Adafruit_MotorShield AFMS = Adafruit_MotorShield();

// Define motor pins
AF_DCMotor motor1(1, MOTOR12_1KHZ);
AF_DCMotor motor2(2, MOTOR12_1KHZ);
AF_DCMotor motor3(3, MOTOR34_1KHZ);
AF_DCMotor motor4(4, MOTOR34_1KHZ);

int Speed = 255;  // Standard full speed

void setup() {
  Serial.begin(38400);

//  Serial.begin(9600);  // Initialize serial communication
  AFMS.begin();  // Start Motor Shield

  pinMode(FRONT_LIGHT_PIN, OUTPUT);
  pinMode(BACK_LIGHT_PIN, OUTPUT);
  pinMode(HORN_PIN, OUTPUT);

  Serial.println("Bluetooth RC Car Ready!");
}

void loop() {
  if (Serial.available()) {
    char receivedChar = Serial.read();
    
    if (receivedChar != '\n' && receivedChar != '\r') {
      Serial.print("Received: ");
      Serial.println(receivedChar);

      Stop(); // Stop motors before new movement

      switch (receivedChar) {  
        case 'F': forward(); break;
        case 'B': back(); break;
        case 'L': left(); break;
        case 'R': right(); break; 
//      case 'I': topright(); break;
 //2     case 'J': topleft(); break;
//      case 'K': bottomright(); break;
//      case 'M': bottomleft(); break;
//      case 'T': Stop(); break;
        case 'X': frontlight(); break;
        case 'Y': backlight(); break;
        case 'Z': horn(); break;
      }
    }
  }
}

// Movement Functions
void forward() {
    Serial.println("Moving Forward");
    motor1.setSpeed(Speed); motor1.run(FORWARD);
    motor2.setSpeed(Speed); motor2.run(FORWARD);
    motor3.setSpeed(Speed); motor3.run(FORWARD);
    motor4.setSpeed(Speed); motor4.run(FORWARD);
}

void back() {
    Serial.println("Moving Backward");
    motor1.setSpeed(Speed); motor1.run(BACKWARD);
    motor2.setSpeed(Speed); motor2.run(BACKWARD);
    motor3.setSpeed(Speed); motor3.run(BACKWARD);
    motor4.setSpeed(Speed); motor4.run(BACKWARD);
}

void left() {
    Serial.println("Turning Left");
    motor1.setSpeed(Speed); motor1.run(BACKWARD);
    motor2.setSpeed(Speed); motor2.run(BACKWARD);
    motor3.setSpeed(Speed); motor3.run(FORWARD);
    motor4.setSpeed(Speed); motor4.run(FORWARD);
}

void right() {
    Serial.println("Turning Right");
    motor1.setSpeed(Speed); motor1.run(FORWARD);
    motor2.setSpeed(Speed); motor2.run(FORWARD);
    motor3.setSpeed(Speed); motor3.run(BACKWARD);
    motor4.setSpeed(Speed); motor4.run(BACKWARD);
}

void topleft() {
    Serial.println("Moving Top Left");
    int reducedSpeed = Speed * 0.3;
    motor1.setSpeed(Speed); motor1.run(FORWARD);
    motor2.setSpeed(Speed); motor2.run(FORWARD);
    motor3.setSpeed(reducedSpeed); motor3.run(FORWARD);
    motor4.setSpeed(reducedSpeed); motor4.run(FORWARD);
}

void topright() {
    Serial.println("Moving Top Right");
    int reducedSpeed = Speed * 0.3;
    motor1.setSpeed(reducedSpeed); motor1.run(FORWARD);
    motor2.setSpeed(reducedSpeed); motor2.run(FORWARD);
    motor3.setSpeed(Speed); motor3.run(FORWARD);
    motor4.setSpeed(Speed); motor4.run(FORWARD);
}

void bottomleft() {
    Serial.println("Moving Bottom Left");
    int reducedSpeed = Speed * 0.3;
    motor1.setSpeed(Speed); motor1.run(BACKWARD);
    motor2.setSpeed(Speed); motor2.run(BACKWARD);
    motor3.setSpeed(reducedSpeed); motor3.run(BACKWARD);
    motor4.setSpeed(reducedSpeed); motor4.run(BACKWARD);
}

void bottomright() {
    Serial.println("Moving Bottom Right");
    int reducedSpeed = Speed * 0.3;
    motor1.setSpeed(reducedSpeed); motor1.run(BACKWARD);
    motor2.setSpeed(reducedSpeed); motor2.run(BACKWARD);
    motor3.setSpeed(Speed); motor3.run(BACKWARD);
    motor4.setSpeed(Speed); motor4.run(BACKWARD);
}

void Stop() {
    Serial.println("Stopping");
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
}

void frontlight() {
    Serial.println("Front Light Toggle");
    digitalWrite(FRONT_LIGHT_PIN, !digitalRead(FRONT_LIGHT_PIN));  // Toggle state
}

void backlight() {
    Serial.println("Back Light Toggle");
    digitalWrite(BACK_LIGHT_PIN, !digitalRead(BACK_LIGHT_PIN));  // Toggle state
}

void horn() {
    Serial.println("Horn Beep");
    digitalWrite(HORN_PIN, HIGH);
    delay(500);  // Beep duration
    digitalWrite(HORN_PIN, LOW);
}
